<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush x:Key="BackgroundDarkBrush2" Color="#888" />
    <SolidColorBrush x:Key="BackgroundDarkBrush" Color="#e6ebf5" />
    <SolidColorBrush x:Key="BackgroundLightBrush" Color="#ffffff" />
    <SolidColorBrush x:Key="BackgroundLightBrush2" Color="#f0f0f0" />

    <SolidColorBrush x:Key="TextHintLightBrush" Color="#777" />


    <BitmapImage x:Key="ImageLargeIcons" DecodePixelWidth="24" DecodePixelHeight="24"
		UriSource="../Resources/Images/large_icons.png" />
    <BitmapImage x:Key="ImageSmallIcons" DecodePixelWidth="24" DecodePixelHeight="24"
		UriSource="../Resources/Images/small_icons.png" />

    <BitmapImage x:Key="ImageProjectTemplateClassLibrary" DecodePixelWidth="48" DecodePixelHeight="48"
		UriSource="../Resources/Images/classlibrary_icon.png" />

    <Geometry x:Key="SearchGeometry">F1 M 8.5,7.0 C 7.12,7.00 6.0,5.88 6.0,4.5 C 6.0,3.12 7.12,2.0 8.5,2.0 C 9.88,2.0 11.0,3.12 11.0,4.5 C 11.0,5.88 9.88,7.0 8.5,7.0 Z M 8.5,0.0 C 6.02,0.0 4.0,2.02 4.0,4.500 C 4.0,5.23 4.19,5.9 4.49,6.5 L 0.0,11.0 L 2.0,13.0 L 6.49,8.51 C 7.1,8.81 7.77,9.0 8.5,9.0 C 11.0,9.0 13.0,7.0 13.0,4.5 C 13.0,2.02 11.0,0.0 8.5,0.0 Z</Geometry>
    <Geometry x:Key="SearchClearStopGeometry">F1 M 0,1 L 1,0 L 4,3 L 7,0 L 8,1 L 5,4 L 8,7 L 7,8 L 4,5 L 1,8 L 0,7 L 3,4 L 0,1 Z</Geometry>

    <Geometry x:Key="ArrowGeometry">M0,3.5L3.5,0 7,3.5 0,3.5</Geometry>

    <DrawingImage x:Key="DefaultNoNameImageSource">
        <DrawingImage.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Geometry>
                    <GeometryGroup>
                        <RectangleGeometry Rect="0,0,128,128" />
                    </GeometryGroup>
                </GeometryDrawing.Geometry>
                <GeometryDrawing.Brush>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Grid Width="128" Height="128" Background="White">
                                <Border BorderThickness="2,6,2,2" BorderBrush="Black" Background="White">
                                </Border>
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </GeometryDrawing.Brush>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>


    <Border x:Key="DynamicIconVisualBrush" BorderThickness="2,6,2,2" BorderBrush="Black">
        <Grid Background="White">
            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" Text="{Binding Name}" FontSize="16" FontWeight="Bold" Foreground="Black" />
        </Grid>
    </Border>

    <RotateTransform x:Key="TransformRotate90" Angle="90" CenterX="3.5" CenterY="1.75" />
    <RotateTransform x:Key="TransformRotate180" Angle="180" CenterX="3.5" CenterY="1.75" />
    <RotateTransform x:Key="TransformRotate270" Angle="270" CenterX="3.5" CenterY="1.75" />

    <DataTemplate x:Key="StartTemplate">
        <Path x:Uid="StarPath"
			Stroke="Gray"
			Height="12"
			Width="12"
			Data="M 7,0 L 9,5 14,5 10,8.5 12,14 7,10.5 2,14 4,8.5 0,5 5,5 7,0 Z" Stretch="Fill">

            <Path.Fill>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="Yellow" Offset="0" />
                    <GradientStop Color="Yellow" Offset="{Binding Value}" />
                    <GradientStop Color="GhostWhite" Offset="{Binding Value}" />
                    <GradientStop Color="GhostWhite" Offset="1" />
                </LinearGradientBrush>
            </Path.Fill>
        </Path>
    </DataTemplate>

    <Style x:Key="ProviderItemContainerStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundLightBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border SnapsToDevicePixels="true" Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="FlatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="6,2" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ProviderSourceItemContainerStyle" TargetType="{x:Type ListViewItem}">

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Top"></Setter>
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="IsSelected" Value="{Binding IsOpened, Mode=TwoWay}" />
        <Setter Property="DockPanel.Dock" Value="Top"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
						Padding="{TemplateBinding Padding}"
						BorderBrush="{TemplateBinding Border.BorderBrush}"
						Background="{TemplateBinding Panel.Background}"
						x:Name="Bd"


						SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                        </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd"
								Value="{StaticResource BackgroundLightBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd"
								Value="{StaticResource BackgroundLightBrush2}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BackgroundDarkBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <ControlTemplate x:Key="ProjectSourceExpanderControlTemplate" TargetType="{x:Type Expander}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
			Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="HeaderSite"
					Focusable="False"
					
					ContentTemplate="{TemplateBinding HeaderTemplate}"
					Content="{TemplateBinding Header}"
					Grid.Row="0"
					Foreground="{TemplateBinding Foreground}"
					FontWeight="{TemplateBinding FontWeight}"
					FontStyle="{TemplateBinding FontStyle}"
					FontStretch="{TemplateBinding FontStretch}"
					FontSize="{TemplateBinding FontSize}"
					FontFamily="{TemplateBinding FontFamily}"
					HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
					IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
					Margin="1" MinWidth="0" MinHeight="0"
					Padding="{TemplateBinding Padding}"

					VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">

                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="rootBorder" Padding="{TemplateBinding Padding}"
											HorizontalAlignment="Stretch"
											BorderBrush="{StaticResource BackgroundDarkBrush2}"
                                                >
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Path x:Name="arrow" Data="{StaticResource ArrowGeometry}"
													HorizontalAlignment="Center" SnapsToDevicePixels="False"
													StrokeThickness="1" Stroke="Black" VerticalAlignment="Center" />
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
													Content="{TemplateBinding Content}" Grid.Column="1"
													ContentStringFormat="{TemplateBinding ContentStringFormat}"
													HorizontalAlignment="Stretch" Margin="4,0,0,0"
													RecognizesAccessKey="True" SnapsToDevicePixels="True"
													VerticalAlignment="Center" />
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="arrow" Property="RenderTransform"
													Value="{StaticResource TransformRotate180}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter TargetName="arrow" Property="RenderTransform"
													Value="{StaticResource TransformRotate90}" />
                                                <Setter TargetName="arrow" Property="Fill" Value="Black" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <!--Width="{Binding ViewportWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}}}"		-->
                <ContentPresenter x:Name="ExpandSite"
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Content="{TemplateBinding Content}"
					ContentStringFormat="{TemplateBinding ContentStringFormat}"
					Grid.Row="1"
					Focusable="False"
					
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					Margin="0"
					Visibility="Collapsed"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="SearchBoxControlTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
					Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2"
				IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
				PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
				Placement="Bottom">
                <Border x:Name="DropDownBorder"
					BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1"
					Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
								Width="0">
                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
									Height="{Binding ActualHeight, ElementName=DropDownBorder}"
									Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
								KeyboardNavigation.DirectionalNavigation="Contained"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
				Grid.ColumnSpan="2"
				IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="ClickMode" Value="Press" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC"
										BorderThickness="{TemplateBinding BorderThickness}"
										SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFF0F0F0" Offset="0" />
                                                <GradientStop Color="#FFE5E5E5" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
											HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True"
											Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                            <Path x:Name="Arrow"
												Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
												Fill="#FF606060" HorizontalAlignment="Center" Margin="0"
												VerticalAlignment="Center" />
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
													Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
													Value="true" />
                                                <Condition
													Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
													Value="false" />
                                                <Condition
													Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
													Value="false" />
                                                <Condition
													Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
													Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3" />
                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent" />
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Fill" TargetName="Arrow" Value="Black" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
													Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
													Value="true" />
                                                <Condition
													Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
													Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA" />
                                            <Setter Property="Background" TargetName="splitBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#FFEBF4FC" Offset="0" />
                                                        <GradientStop Color="#FFDCECFC" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Fill" TargetName="Arrow" Value="Black" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
													Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
													Value="true" />
                                                <Condition
													Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
													Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5" />
                                            <Setter Property="Background" TargetName="splitBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#FFDAEBFC" Offset="0" />
                                                        <GradientStop Color="#FFC4E0FC" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5" />
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
													Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
													Value="false" />
                                                <Condition
													Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
													Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="templateRoot" Value="White" />
                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF" />
                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent" />
                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent" />
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Border x:Name="Border" Background="White" Margin="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="PART_EditableTextBox"
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
						Margin="{TemplateBinding Padding}"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="AllowDrop" Value="True" />
                                <Setter Property="MinWidth" Value="0" />
                                <Setter Property="MinHeight" Value="0" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ScrollViewer
												Background="{TemplateBinding Background}"
												x:Name="PART_ContentHost" Focusable="False"
												HorizontalScrollBarVisibility="Hidden"
												VerticalScrollBarVisibility="Hidden" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Text" Value="" />
                                            <Condition Property="IsFocused" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush AlignmentX="Left" Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <TextBlock HorizontalAlignment="Left" Background="Transparent"
															FontSize="14" Text="Search templates (Ctrl-E)"
															Foreground="{StaticResource TextHintLightBrush}" />
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Button Style="{DynamicResource FlatButtonStyle}" Grid.Column="1" Command="{Binding SearchCommand}">
                        <Path Data="{StaticResource SearchGeometry}" Fill="CornflowerBlue" />
                    </Button>
                    <Button Grid.Column="1" Style="{DynamicResource FlatButtonStyle}"
						Command="{Binding ResetSearchCommand}">
                        <Path Data="{StaticResource SearchClearStopGeometry}" Fill="Red" />
                    </Button>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Border" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect"
					Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect"
					Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" TextDecorations="Underline">
                    <ContentPresenter/>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <ControlTemplate x:Key="SourcesListBoxControl" TargetType="{x:Type ListBox}">
        <Grid>
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                <ItemsPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>